প্রব্লেম লিঙ্ক - [Link](https://codeforces.com/contest/1716/problem/B)

আজ আমরা এই প্রব্লেম টী নিয়ে আলোচনা করবো ।

এবার প্রব্লেম টা বুঝার চেষ্টা করি ।

ব্যাখ্যা - এই প্রব্লেম এ যাওয়ার আগে আমরা Permutation কি টা জেনে নেই । Permutation হল 1 থেকে n পর্যন্ত পূর্ণসংখ্যার একটি ক্রম যাতে প্রতিটি পূর্ণসংখ্যা ঠিক একবার আসে।

এবার আমরা প্রব্লেম টা নিয়ে কথা বলি…… উদাহরণ দিয়ে বিষয় টি বুঝই আমরা বুঝার চেষ্টা করি ।

উদাহরণ -

[১,২,৩] হল প্রথম permutation chain এবং এর fixedness হল ৩

এখন আমাদের কাজ হল এর fixedness কমানো । এই fixedness কমানোর কাজ টা আমরা করতে পারি swapping করে । এখন কথা হল swapping কি আবার ?

swapping হল দুইটা সংখ্যার স্থান পরিবর্তন করা ।

এবার ফিরে আসি আগের কথায়ে, আমরা এভাবে swapping করে fixedness যত কমাতে পারব ।

[১, ২, ৩] হল প্রথম permutation chain এবং এর fixedness হল ৩

[১, ৩, ২] দ্বিতীয় এবং তৃতীয় সংখ্যার স্থান এর পরিবর্তন হল এবং fixedness কমে ৩ থেকে ১ হল

[৩, ১, ২] প্রথম এবং দ্বিতীয় সংখ্যার স্থান এর পরিবর্তন হল এবং fixedness কমে ১ থেকে ০ হল ।

সমাধানের সবচেয়ে সহজ উপায় হল সবার শেষে যেহেতু সবচেয়ে বড়ো সংখ্যাটা থাকে ঐটা কে আগের সংখ্যার সাথে swap করা এভাবে number of lengths পর্যন্ত ।

উপরের উদাহরনে আমরা যেভাবে করেছি ।

[১, ২, ৩]

[১, ৩, ২]

[৩, ২, ১]

ইনপুট - number of testcases থাকবে । প্রতিটি testcase এ একটা required length of permutations দেয়া থাকবে ।

আউটপুট - length of permutations আগে প্রিন্ট করতে হবে । তারপড়ে যতো length ততোগুলা permutations প্রিন্ট করতে হবে যাতে fixedness কমতে থাকে ।

আসা করি বুঝা গেসে ।

আগে প্রব্লেম টা করার চেষ্টা করো তারপরে [Solution](https://codeforces.com/contest/1716/submission/166995117) দেখে ।
